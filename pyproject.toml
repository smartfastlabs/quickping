[tool.poetry]
name = "quickping"
version = "0.0.2"
description = "Quickping Client Library"
authors = ["Todd Sifleet <todd@smartfast.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.0"
appdaemon = "^4.4.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.poetry.group.dev.dependencies]
black = ">=23.3.0"
ruff = ">=0.0.278"
mypy = ">=1.4.1"
pytest = "^8.2.0"  
pytest-cov = ">=4.1.0"
pre-commit = ">=3.3.3"
dobles = "^4.0.2"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line length violations (handled by black)
]

[tool.ruff.isort]
known-first-party = ["quickping"]
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "quickping"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
addopts = "--cov=quickping --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["quickping"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING",
    "raise NotImplementedError",
]
